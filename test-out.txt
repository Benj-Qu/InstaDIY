============================= test session starts ==============================
platform darwin -- Python 3.10.7, pytest-7.1.3, pluggy-1.0.0 -- /Users/cjy/eecs485/EECS485-p3/env/bin/python3.10
cachedir: .pytest_cache
rootdir: /Users/cjy/eecs485/EECS485-p3
collecting ... collected 43 items

test_selenium_hello.py::test_selenium_hello PASSED                       [  2%]
tests/test_index.py::test_anything 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60726/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:47] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:47] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:48] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:48] "GET /accounts/login/ HTTP/1.1" 200 -
PASSED                                                                   [  4%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:48] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_login 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60751/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:49] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:49] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:50] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:50] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [  6%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:01] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_login ERROR                                    [  6%]
tests/test_index.py::test_feed_load 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60791/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:02] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:02] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:03] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:03] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [  9%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:14] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_feed_load ERROR                                [  9%]
tests/test_index.py::test_new_comment 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60825/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:14] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:14] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:15] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:15] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 11%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:26] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_new_comment ERROR                              [ 11%]
tests/test_index.py::test_delete_comment 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60857/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:27] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:27] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 13%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:39] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_delete_comment ERROR                           [ 13%]
tests/test_index.py::test_new_comment_delete 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60890/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:39] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:39] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 16%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:51] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_new_comment_delete ERROR                       [ 16%]
tests/test_index.py::test_like_unlike 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60921/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:51] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:51] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 18%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:02] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_like_unlike ERROR                              [ 18%]
tests/test_index.py::test_double_click_like 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60953/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:03] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:03] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:04] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 20%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:15] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_double_click_like ERROR                        [ 20%]
tests/test_index.py::test_refresh 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60989/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:15] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:15] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:16] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:16] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 23%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:27] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_refresh ERROR                                  [ 23%]
tests/test_index.py::test_html 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61020/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:27] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:27] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:28] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:28] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 25%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:39] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_index.py::test_html ERROR                                     [ 25%]
tests/test_rest_api_likes_and_comments.py::test_likes_delete 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 27%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_likes_and_comments.py::test_likes_post 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 30%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_likes_and_comments.py::test_like_exists 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 32%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_likes_and_comments.py::test_comments_post 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 34%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_likes_and_comments.py::test_comments_delete 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 37%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_posts.py::test_posts_list 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 39%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_posts.py::test_posts_detail 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 41%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_posts.py::test_posts_autoincrement PASSED            [ 44%]
tests/test_rest_api_posts.py::test_posts_pagination_simple 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 46%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_posts.py::test_posts_pagination_page_size 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 48%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_posts.py::test_posts_pagination_upload_between_requests 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 51%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_posts.py::test_posts_pagination_errors 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 53%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_simple.py::test_resources 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 55%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_simple.py::test_login_session 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 58%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_rest_api_simple.py::test_http_basic_auth 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:305 Setup test fixture 'client'
PASSED                                                                   [ 60%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:321 Teardown test fixture 'client'

tests/test_scripts.py::test_executables PASSED                           [ 62%]
tests/test_scripts.py::test_insta485install PASSED                       [ 65%]
tests/test_scripts.py::test_insta485db_random PASSED                     [ 67%]
tests/test_scroll.py::test_infinite_scroll 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61064/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:42] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:42] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 69%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:54] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_scroll.py::test_infinite_scroll ERROR                         [ 69%]
tests/test_scroll.py::test_infinite_scroll_many 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61158/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:55] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:55] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 72%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:07] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_scroll.py::test_infinite_scroll_many ERROR                    [ 72%]
tests/test_scroll.py::test_scroll_refresh 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61319/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:08] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:08] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 74%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:20] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_scroll.py::test_scroll_refresh ERROR                          [ 74%]
tests/test_slow_server_index.py::test_delay 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61406/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:21] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:21] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20 
-------------------------------- live log call ---------------------------------
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:23] "GET /api/v1/ HTTP/1.1" 200 -
PASSED                                                                   [ 76%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:23] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_slow_server_index.py::test_login 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61435/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:24] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:24] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20 
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:25] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:25] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:25] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:25] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:25] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
PASSED                                                                   [ 79%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:26] "GET /api/v1/posts/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:26] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_slow_server_index.py::test_feed_load 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61471/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:26] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:26] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20 
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:27] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:27] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 81%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:48] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_slow_server_index.py::test_feed_load ERROR                    [ 81%]
tests/test_slow_server_index.py::test_new_comment 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61510/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:49] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:49] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20 
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:51] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 83%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:11] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_slow_server_index.py::test_new_comment ERROR                  [ 83%]
tests/test_slow_server_index.py::test_like_unlike 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61563/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:11] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:11] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20 
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:13] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 86%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:33] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_slow_server_index.py::test_like_unlike ERROR                  [ 86%]
tests/test_slow_server_index.py::test_refresh 
-------------------------------- live log setup --------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61595/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:33] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:33] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20 
-------------------------------- live log call ---------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:35] "GET /api/v1/posts/ HTTP/1.1" 200 -
FAILED                                                                   [ 88%]
------------------------------ live log teardown -------------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:55] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'

tests/test_slow_server_index.py::test_refresh ERROR                      [ 88%]
tests/test_style.py::test_pycodestyle FAILED                             [ 90%]
tests/test_style.py::test_pydocstyle FAILED                              [ 93%]
tests/test_style.py::test_pylint FAILED                                  [ 95%]
tests/test_style.py::test_eslint PASSED                                  [ 97%]
tests/test_style.py::test_prettier FAILED                                [100%]

==================================== ERRORS ====================================
_______________________ ERROR at teardown of test_login ________________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:60751/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60751/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60751/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:60751/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:60751/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:60751/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:60751/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:60751/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:60751/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:60751/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60751/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:49] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:49] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:50] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:50] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:01] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
_____________________ ERROR at teardown of test_feed_load ______________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:60791/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60791/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60791/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:60791/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:60791/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:60791/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:60791/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:60791/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:60791/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:60791/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60791/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:02] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:02] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:03] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:03] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:14] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
____________________ ERROR at teardown of test_new_comment _____________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:60825/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60825/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60825/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:60825/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:60825/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:60825/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:60825/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:60825/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:60825/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:60825/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60825/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:14] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:14] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:15] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:15] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:26] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
___________________ ERROR at teardown of test_delete_comment ___________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:60857/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60857/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60857/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:60857/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:60857/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:60857/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:60857/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:60857/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:60857/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:60857/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60857/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:27] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:27] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:39] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
_________________ ERROR at teardown of test_new_comment_delete _________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:60890/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60890/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60890/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:60890/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:60890/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:60890/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:60890/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:60890/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:60890/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:60890/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60890/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:39] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:39] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:51] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
____________________ ERROR at teardown of test_like_unlike _____________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:60921/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60921/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60921/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:60921/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:60921/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:60921/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:60921/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:60921/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:60921/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:60921/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60921/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:51] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:51] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:02] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
_________________ ERROR at teardown of test_double_click_like __________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:60953/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60953/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60953/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:60953/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:60953/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:60953/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:60953/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:60953/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:60953/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:60953/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60953/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:03] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:03] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:04] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:15] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
______________________ ERROR at teardown of test_refresh _______________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:60989/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60989/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:60989/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:60989/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:60989/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:60989/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:60989/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:60989/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:60989/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:60989/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60989/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:15] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:15] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:16] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:16] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:27] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
________________________ ERROR at teardown of test_html ________________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:61020/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61020/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61020/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:61020/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:61020/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:61020/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:61020/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:61020/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:61020/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:61020/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61020/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:27] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:27] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:28] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:28] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:39] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
__________________ ERROR at teardown of test_infinite_scroll ___________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:61064/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61064/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61064/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:61064/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:61064/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:61064/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:61064/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:61064/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:61064/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:61064/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61064/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:42] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:42] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:54] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
________________ ERROR at teardown of test_infinite_scroll_many ________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:61158/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61158/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61158/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:61158/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:61158/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:61158/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:61158/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:61158/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:61158/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:61158/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61158/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:55] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:55] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:07] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
___________________ ERROR at teardown of test_scroll_refresh ___________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:61319/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61319/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61319/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:61319/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:61319/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:61319/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:61319/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:61319/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:61319/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:61319/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61319/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:08] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:08] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:151 Teardown test fixture 'live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:20] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
_____________________ ERROR at teardown of test_feed_load ______________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:61471/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61471/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61471/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:61471/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:61471/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:61471/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:61471/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:61471/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:61471/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:61471/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61471/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:26] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:26] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:27] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:27] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:48] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
____________________ ERROR at teardown of test_new_comment _____________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:61510/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61510/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61510/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:61510/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:61510/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:61510/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:61510/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:61510/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:61510/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:61510/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61510/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:49] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:49] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:51] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:11] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
____________________ ERROR at teardown of test_like_unlike _____________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:61563/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61563/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61563/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:61563/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:61563/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:61563/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:61563/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:61563/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:61563/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:61563/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61563/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:11] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:11] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:13] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:33] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
______________________ ERROR at teardown of test_refresh _______________________

chromedriver_path = PosixPath('/Users/cjy/eecs485/EECS485-p3/node_modules/.bin/chromedriver')

    @pytest.fixture(name='driver')
    def setup_teardown_selenium_driver(chromedriver_path):
        """Configure Selenium library to connect to a headless Chrome browser."""
        LOGGER.info("Setup test fixture 'driver'")
    
        # Configure Selenium
        #
        # Pro-tip: remove the "headless" option and set a breakpoint.  A Chrome
        # browser window will open, and you can play with it using the developer
        # console.
        options = selenium.webdriver.chrome.options.Options()
    
        # Don't open a browser GUI window
        options.add_argument("--headless")
    
        # Prevent issues in the Autograder Docker container
        options.add_argument("--no-sandbox")
    
        # More Autograder Docker container issues. By default, Docker runs a
        # container with a /dev/shm shared memory space of 64MB, which is too small
        # for Chrome and will cause Chrome to crash when rendering large
        # pages. This argument tells Chrome driver to write shared memory files
        # into /tmp instead of /dev/shm.
        options.add_argument("--disable-dev-shm-usage")
    
        # We use the "capabilities" object to access the Chrome logs, which is
        # similar to what you'd see in the developer console.   Later, we'll use
        # the logs to check for JavaScript exceptions.
        # Docs: https://stackoverflow.com/questions/44991009/
        capabilities = selenium.webdriver.common.desired_capabilities.\
            DesiredCapabilities.CHROME
        capabilities['goog:loggingPrefs'] = {'browser': 'SEVERE'}
    
        driver = selenium.webdriver.Chrome(
            options=options,
            desired_capabilities=capabilities,
            executable_path=str(chromedriver_path),
        )
    
        # An implicit wait tells WebDriver to poll the DOM for a certain amount of
        # time when trying to find any element (or elements) not immediately
        # available. Once set, the implicit wait is set for the life of the
        # WebDriver object.
        #
        # https://selenium-python.readthedocs.io/waits.html#implicit-waits
        driver.implicitly_wait(IMPLICIT_WAIT_TIME)
        LOGGER.info("IMPLICIT_WAIT_TIME=%s", IMPLICIT_WAIT_TIME)
    
        # Transfer control to test.  The code before the "yield" statement is setup
        # code, which is executed before the test.  Code after the "yield" is
        # teardown code, which is executed at the end of the test.  Teardown code
        # is executed whether the test passed or failed.
        yield driver
    
        # Teardown code starts here
        LOGGER.info("Teardown test fixture 'driver'")
    
        # Verify no errors in the browser console such as JavaScript exceptions
        # or failed page loads
        console_log = [err["message"] for err in driver.get_log("browser")]
        # Allow errors related to favicon.ico and third-party CSS frameworks
        error_exceptions = ["favicon.ico", "css"]
        console_log_errors = list(
            filter(
                lambda x: all(exp not in x.lower() for exp in error_exceptions),
                console_log,
            )
        )
    
        # Clean up the browser processes started by Selenium
        driver.quit()
    
        errors = "\n".join(console_log_errors)
>       assert not console_log_errors,\
            f"Errors in browser console:\n{errors}"
E       AssertionError: Errors in browser console:
E         http://localhost:61595/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61595/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E         http://localhost:61595/static/js/bundle.js 41751:22 "The above error occurred in the \u003CPosts> component:\n\n    at Posts (http://localhost:61595/static/js/bundle.js:484:86)\n\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."
E         http://localhost:61595/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')
E       assert not ["http://localhost:61595/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", "http://localhost:61595/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')", 'http://localhost:61595/static/js/bundle.js 41751:22 "The above error occurred in the \\u003CPosts> component:\\n\\n    at Posts (http://localhost:61595/static/js/bundle.js:484:86)\\n\\nConsider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries."', "http://localhost:61595/static/js/bundle.js 544:26 Uncaught TypeError: Cannot read properties of undefined (reading 'length')"]

tests/conftest.py:228: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61595/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:33] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:33] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:35] "GET /api/v1/posts/ HTTP/1.1" 200 -
---------------------------- Captured log teardown -----------------------------
INFO     autograder:conftest.py:251 Teardown test fixture 'slow_driver'
INFO     autograder:conftest.py:210 Teardown test fixture 'driver'
INFO     autograder:conftest.py:289 Teardown test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:55] "POST /shutdown/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:133 Teardown test fixture 'app'
=================================== FAILURES ===================================
__________________________________ test_login __________________________________

live_server = <conftest.LiveServer object at 0x105459540>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="b71561d13cea876820115d75bc16669a")>

    def test_login(live_server, driver):
        """Verify user awdeorio can log in.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        # Load login page
        login_url = urljoin(live_server.url(), "/accounts/login")
        driver.get(login_url)
        assert driver.find_elements(By.XPATH, ".//*")
    
        # Log in
        assert driver.find_element(By.NAME, "username")
        assert driver.find_element(By.NAME, "password")
        username_field = driver.find_element(By.NAME, "username")
        password_field = driver.find_element(By.NAME, "password")
        username_field.send_keys("awdeorio")
        password_field.send_keys("password")
        submit_buttons = driver.find_elements(
            By.XPATH,
            "//input[@type='submit' and @value='login']"
        )
        assert len(submit_buttons) == 1
        submit_button = submit_buttons[0]
        submit_button.click()
    
        # After logging in, we should be redirected to the "/" URL
        assert urlparse(driver.current_url).path == "/"
    
        # The "/" page should contain a React entry point called 'reactEntry'
        assert driver.find_element(By.ID, "reactEntry")
    
        react_entry = driver.find_element(By.ID, "reactEntry")
>       assert react_entry.find_element(By.XPATH, ".//*"), \
            "Failed to find an element rendered by ReactJS"

tests/test_index.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10546d6f0>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x0000000102e0e598 chromedriver + 4404632
E       1   chromedriver                        0x0000000102d95fa3 chromedriver + 3911587
E       2   chromedriver                        0x0000000102a42e6a chromedriver + 425578
E       3   chromedriver                        0x0000000102a7ac91 chromedriver + 654481
E       4   chromedriver                        0x0000000102a7ae91 chromedriver + 654993
E       5   chromedriver                        0x0000000102a6f527 chromedriver + 607527
E       6   chromedriver                        0x0000000102a98dcd chromedriver + 777677
E       7   chromedriver                        0x0000000102a6f465 chromedriver + 607333
E       8   chromedriver                        0x0000000102a98efe chromedriver + 777982
E       9   chromedriver                        0x0000000102aaff79 chromedriver + 872313
E       10  chromedriver                        0x0000000102a98bd3 chromedriver + 777171
E       11  chromedriver                        0x0000000102a6dced chromedriver + 601325
E       12  chromedriver                        0x0000000102a6ee51 chromedriver + 605777
E       13  chromedriver                        0x0000000102dde0ce chromedriver + 4206798
E       14  chromedriver                        0x0000000102de2797 chromedriver + 4224919
E       15  chromedriver                        0x0000000102de9a4f chromedriver + 4254287
E       16  chromedriver                        0x0000000102de34da chromedriver + 4228314
E       17  chromedriver                        0x0000000102dbc23f chromedriver + 4067903
E       18  chromedriver                        0x0000000102e006a8 chromedriver + 4347560
E       19  chromedriver                        0x0000000102e00816 chromedriver + 4347926
E       20  chromedriver                        0x0000000102e158fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60751/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:49] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:49] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:50] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:50] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:37:51] "GET /api/v1/posts/ HTTP/1.1" 200 -
________________________________ test_feed_load ________________________________

live_server = <conftest.LiveServer object at 0x1058b4100>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="448625d8f7947b302288a3aa08777b76")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_login(live_server, driver)

tests/test_index.py:85: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1058b4b20>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x000000010875d598 chromedriver + 4404632
E       1   chromedriver                        0x00000001086e4fa3 chromedriver + 3911587
E       2   chromedriver                        0x0000000108391e6a chromedriver + 425578
E       3   chromedriver                        0x00000001083c9c91 chromedriver + 654481
E       4   chromedriver                        0x00000001083c9e91 chromedriver + 654993
E       5   chromedriver                        0x00000001083be527 chromedriver + 607527
E       6   chromedriver                        0x00000001083e7dcd chromedriver + 777677
E       7   chromedriver                        0x00000001083be465 chromedriver + 607333
E       8   chromedriver                        0x00000001083e7efe chromedriver + 777982
E       9   chromedriver                        0x00000001083fef79 chromedriver + 872313
E       10  chromedriver                        0x00000001083e7bd3 chromedriver + 777171
E       11  chromedriver                        0x00000001083bcced chromedriver + 601325
E       12  chromedriver                        0x00000001083bde51 chromedriver + 605777
E       13  chromedriver                        0x000000010872d0ce chromedriver + 4206798
E       14  chromedriver                        0x0000000108731797 chromedriver + 4224919
E       15  chromedriver                        0x0000000108738a4f chromedriver + 4254287
E       16  chromedriver                        0x00000001087324da chromedriver + 4228314
E       17  chromedriver                        0x000000010870b23f chromedriver + 4067903
E       18  chromedriver                        0x000000010874f6a8 chromedriver + 4347560
E       19  chromedriver                        0x000000010874f816 chromedriver + 4347926
E       20  chromedriver                        0x00000001087648fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60791/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:02] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:02] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:03] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:03] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:04] "GET /api/v1/posts/ HTTP/1.1" 200 -
_______________________________ test_new_comment _______________________________

live_server = <conftest.LiveServer object at 0x10574d3c0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="e8d566962c092890c84baddd016684ec")>

    def test_new_comment(live_server, driver):
        """Verify new comment appears without refresh.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:85: in test_feed_load
    test_login(live_server, driver)
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10574d930>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x0000000101b94598 chromedriver + 4404632
E       1   chromedriver                        0x0000000101b1bfa3 chromedriver + 3911587
E       2   chromedriver                        0x00000001017c8e6a chromedriver + 425578
E       3   chromedriver                        0x0000000101800c91 chromedriver + 654481
E       4   chromedriver                        0x0000000101800e91 chromedriver + 654993
E       5   chromedriver                        0x00000001017f5527 chromedriver + 607527
E       6   chromedriver                        0x000000010181edcd chromedriver + 777677
E       7   chromedriver                        0x00000001017f5465 chromedriver + 607333
E       8   chromedriver                        0x000000010181eefe chromedriver + 777982
E       9   chromedriver                        0x0000000101835f79 chromedriver + 872313
E       10  chromedriver                        0x000000010181ebd3 chromedriver + 777171
E       11  chromedriver                        0x00000001017f3ced chromedriver + 601325
E       12  chromedriver                        0x00000001017f4e51 chromedriver + 605777
E       13  chromedriver                        0x0000000101b640ce chromedriver + 4206798
E       14  chromedriver                        0x0000000101b68797 chromedriver + 4224919
E       15  chromedriver                        0x0000000101b6fa4f chromedriver + 4254287
E       16  chromedriver                        0x0000000101b694da chromedriver + 4228314
E       17  chromedriver                        0x0000000101b4223f chromedriver + 4067903
E       18  chromedriver                        0x0000000101b866a8 chromedriver + 4347560
E       19  chromedriver                        0x0000000101b86816 chromedriver + 4347926
E       20  chromedriver                        0x0000000101b9b8fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60825/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:14] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:14] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:15] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:15] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:16] "GET /api/v1/posts/ HTTP/1.1" 200 -
_____________________________ test_delete_comment ______________________________

live_server = <conftest.LiveServer object at 0x1057ee770>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="dde55253b2b1a476994965591a2ac9ca")>

    def test_delete_comment(live_server, driver):
        """Verify delete comment button works properly.
    
        live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:212: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:85: in test_feed_load
    test_login(live_server, driver)
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1057ed3f0>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x000000010f4bb598 chromedriver + 4404632
E       1   chromedriver                        0x000000010f442fa3 chromedriver + 3911587
E       2   chromedriver                        0x000000010f0efe6a chromedriver + 425578
E       3   chromedriver                        0x000000010f127c91 chromedriver + 654481
E       4   chromedriver                        0x000000010f127e91 chromedriver + 654993
E       5   chromedriver                        0x000000010f11c527 chromedriver + 607527
E       6   chromedriver                        0x000000010f145dcd chromedriver + 777677
E       7   chromedriver                        0x000000010f11c465 chromedriver + 607333
E       8   chromedriver                        0x000000010f145efe chromedriver + 777982
E       9   chromedriver                        0x000000010f15cf79 chromedriver + 872313
E       10  chromedriver                        0x000000010f145bd3 chromedriver + 777171
E       11  chromedriver                        0x000000010f11aced chromedriver + 601325
E       12  chromedriver                        0x000000010f11be51 chromedriver + 605777
E       13  chromedriver                        0x000000010f48b0ce chromedriver + 4206798
E       14  chromedriver                        0x000000010f48f797 chromedriver + 4224919
E       15  chromedriver                        0x000000010f496a4f chromedriver + 4254287
E       16  chromedriver                        0x000000010f4904da chromedriver + 4228314
E       17  chromedriver                        0x000000010f46923f chromedriver + 4067903
E       18  chromedriver                        0x000000010f4ad6a8 chromedriver + 4347560
E       19  chromedriver                        0x000000010f4ad816 chromedriver + 4347926
E       20  chromedriver                        0x000000010f4c28fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60857/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:27] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:27] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:28] "GET /api/v1/posts/ HTTP/1.1" 200 -
___________________________ test_new_comment_delete ____________________________

live_server = <conftest.LiveServer object at 0x10594e440>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="1b668150e0751bb71455f4e6378f010e")>

    def test_new_comment_delete(live_server, driver):
        """Verify new comment appears without refresh.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:268: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:85: in test_feed_load
    test_login(live_server, driver)
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10594c6a0>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x0000000107dda598 chromedriver + 4404632
E       1   chromedriver                        0x0000000107d61fa3 chromedriver + 3911587
E       2   chromedriver                        0x0000000107a0ee6a chromedriver + 425578
E       3   chromedriver                        0x0000000107a46c91 chromedriver + 654481
E       4   chromedriver                        0x0000000107a46e91 chromedriver + 654993
E       5   chromedriver                        0x0000000107a3b527 chromedriver + 607527
E       6   chromedriver                        0x0000000107a64dcd chromedriver + 777677
E       7   chromedriver                        0x0000000107a3b465 chromedriver + 607333
E       8   chromedriver                        0x0000000107a64efe chromedriver + 777982
E       9   chromedriver                        0x0000000107a7bf79 chromedriver + 872313
E       10  chromedriver                        0x0000000107a64bd3 chromedriver + 777171
E       11  chromedriver                        0x0000000107a39ced chromedriver + 601325
E       12  chromedriver                        0x0000000107a3ae51 chromedriver + 605777
E       13  chromedriver                        0x0000000107daa0ce chromedriver + 4206798
E       14  chromedriver                        0x0000000107dae797 chromedriver + 4224919
E       15  chromedriver                        0x0000000107db5a4f chromedriver + 4254287
E       16  chromedriver                        0x0000000107daf4da chromedriver + 4228314
E       17  chromedriver                        0x0000000107d8823f chromedriver + 4067903
E       18  chromedriver                        0x0000000107dcc6a8 chromedriver + 4347560
E       19  chromedriver                        0x0000000107dcc816 chromedriver + 4347926
E       20  chromedriver                        0x0000000107de18fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60890/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:39] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:39] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:40] "GET /api/v1/posts/ HTTP/1.1" 200 -
_______________________________ test_like_unlike _______________________________

live_server = <conftest.LiveServer object at 0x10574cbe0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="d160b95bce3e5e098f07c75bae316f03")>

    def test_like_unlike(live_server, driver):
        """Verify like/unlike button behavior without refresh.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:85: in test_feed_load
    test_login(live_server, driver)
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10574dab0>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x000000010a1ae598 chromedriver + 4404632
E       1   chromedriver                        0x000000010a135fa3 chromedriver + 3911587
E       2   chromedriver                        0x0000000109de2e6a chromedriver + 425578
E       3   chromedriver                        0x0000000109e1ac91 chromedriver + 654481
E       4   chromedriver                        0x0000000109e1ae91 chromedriver + 654993
E       5   chromedriver                        0x0000000109e0f527 chromedriver + 607527
E       6   chromedriver                        0x0000000109e38dcd chromedriver + 777677
E       7   chromedriver                        0x0000000109e0f465 chromedriver + 607333
E       8   chromedriver                        0x0000000109e38efe chromedriver + 777982
E       9   chromedriver                        0x0000000109e4ff79 chromedriver + 872313
E       10  chromedriver                        0x0000000109e38bd3 chromedriver + 777171
E       11  chromedriver                        0x0000000109e0dced chromedriver + 601325
E       12  chromedriver                        0x0000000109e0ee51 chromedriver + 605777
E       13  chromedriver                        0x000000010a17e0ce chromedriver + 4206798
E       14  chromedriver                        0x000000010a182797 chromedriver + 4224919
E       15  chromedriver                        0x000000010a189a4f chromedriver + 4254287
E       16  chromedriver                        0x000000010a1834da chromedriver + 4228314
E       17  chromedriver                        0x000000010a15c23f chromedriver + 4067903
E       18  chromedriver                        0x000000010a1a06a8 chromedriver + 4347560
E       19  chromedriver                        0x000000010a1a0816 chromedriver + 4347926
E       20  chromedriver                        0x000000010a1b58fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60921/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:51] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:51] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:38:52] "GET /api/v1/posts/ HTTP/1.1" 200 -
____________________________ test_double_click_like ____________________________

live_server = <conftest.LiveServer object at 0x10583f700>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="7f75c49b5a590a1213bc5d96a721d6d7")>

    def test_double_click_like(live_server, driver):
        """
        Verify double clicking on an unliked image likes the image.
    
        Load main page, unlike first image, perform two double clicks on it,
        the first of which should like the image, the second should have no effect.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:401: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:85: in test_feed_load
    test_login(live_server, driver)
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10583ead0>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x000000010b28a598 chromedriver + 4404632
E       1   chromedriver                        0x000000010b211fa3 chromedriver + 3911587
E       2   chromedriver                        0x000000010aebee6a chromedriver + 425578
E       3   chromedriver                        0x000000010aef6c91 chromedriver + 654481
E       4   chromedriver                        0x000000010aef6e91 chromedriver + 654993
E       5   chromedriver                        0x000000010aeeb527 chromedriver + 607527
E       6   chromedriver                        0x000000010af14dcd chromedriver + 777677
E       7   chromedriver                        0x000000010aeeb465 chromedriver + 607333
E       8   chromedriver                        0x000000010af14efe chromedriver + 777982
E       9   chromedriver                        0x000000010af2bf79 chromedriver + 872313
E       10  chromedriver                        0x000000010af14bd3 chromedriver + 777171
E       11  chromedriver                        0x000000010aee9ced chromedriver + 601325
E       12  chromedriver                        0x000000010aeeae51 chromedriver + 605777
E       13  chromedriver                        0x000000010b25a0ce chromedriver + 4206798
E       14  chromedriver                        0x000000010b25e797 chromedriver + 4224919
E       15  chromedriver                        0x000000010b265a4f chromedriver + 4254287
E       16  chromedriver                        0x000000010b25f4da chromedriver + 4228314
E       17  chromedriver                        0x000000010b23823f chromedriver + 4067903
E       18  chromedriver                        0x000000010b27c6a8 chromedriver + 4347560
E       19  chromedriver                        0x000000010b27c816 chromedriver + 4347926
E       20  chromedriver                        0x000000010b2918fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60953/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:03] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:03] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:04] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:05] "GET /api/v1/posts/ HTTP/1.1" 200 -
_________________________________ test_refresh _________________________________

live_server = <conftest.LiveServer object at 0x1056db340>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="ccdf73eaf9aa303cb393fc17bcff882a")>

    def test_refresh(live_server, driver):
        """Verify refresh with content from another client.
    
        Load main page, create new post via another client, refresh the page,
        make sure both old posts and new post appear.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:518: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:85: in test_feed_load
    test_login(live_server, driver)
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1056d9000>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x000000010c515598 chromedriver + 4404632
E       1   chromedriver                        0x000000010c49cfa3 chromedriver + 3911587
E       2   chromedriver                        0x000000010c149e6a chromedriver + 425578
E       3   chromedriver                        0x000000010c181c91 chromedriver + 654481
E       4   chromedriver                        0x000000010c181e91 chromedriver + 654993
E       5   chromedriver                        0x000000010c176527 chromedriver + 607527
E       6   chromedriver                        0x000000010c19fdcd chromedriver + 777677
E       7   chromedriver                        0x000000010c176465 chromedriver + 607333
E       8   chromedriver                        0x000000010c19fefe chromedriver + 777982
E       9   chromedriver                        0x000000010c1b6f79 chromedriver + 872313
E       10  chromedriver                        0x000000010c19fbd3 chromedriver + 777171
E       11  chromedriver                        0x000000010c174ced chromedriver + 601325
E       12  chromedriver                        0x000000010c175e51 chromedriver + 605777
E       13  chromedriver                        0x000000010c4e50ce chromedriver + 4206798
E       14  chromedriver                        0x000000010c4e9797 chromedriver + 4224919
E       15  chromedriver                        0x000000010c4f0a4f chromedriver + 4254287
E       16  chromedriver                        0x000000010c4ea4da chromedriver + 4228314
E       17  chromedriver                        0x000000010c4c323f chromedriver + 4067903
E       18  chromedriver                        0x000000010c5076a8 chromedriver + 4347560
E       19  chromedriver                        0x000000010c507816 chromedriver + 4347926
E       20  chromedriver                        0x000000010c51c8fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:60989/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:15] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:15] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:16] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:16] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:17] "GET /api/v1/posts/ HTTP/1.1" 200 -
__________________________________ test_html ___________________________________

live_server = <conftest.LiveServer object at 0x1058b68f0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="1037507437b32d87ef290d4b15e0fac7")>
tmpdir = local('/private/var/folders/h0/htpjtrh57z53gn45nkqhfp2c0000gn/T/pytest-of-cjy/pytest-1/test_html0')

    def test_html(live_server, driver, tmpdir):
        """Verify HTML5 compliance in HTML portion of the index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
    
        'tmpdir' is a fixture provided by the pytest package.  It creates a
        unique temporary directory before the test runs, and removes it afterward.
        https://docs.pytest.org/en/6.2.x/tmpdir.html#the-tmpdir-fixture
        """
>       test_feed_load(live_server, driver)

tests/test_index.py:557: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:85: in test_feed_load
    test_login(live_server, driver)
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1058b66b0>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x000000010a1f9598 chromedriver + 4404632
E       1   chromedriver                        0x000000010a180fa3 chromedriver + 3911587
E       2   chromedriver                        0x0000000109e2de6a chromedriver + 425578
E       3   chromedriver                        0x0000000109e65c91 chromedriver + 654481
E       4   chromedriver                        0x0000000109e65e91 chromedriver + 654993
E       5   chromedriver                        0x0000000109e5a527 chromedriver + 607527
E       6   chromedriver                        0x0000000109e83dcd chromedriver + 777677
E       7   chromedriver                        0x0000000109e5a465 chromedriver + 607333
E       8   chromedriver                        0x0000000109e83efe chromedriver + 777982
E       9   chromedriver                        0x0000000109e9af79 chromedriver + 872313
E       10  chromedriver                        0x0000000109e83bd3 chromedriver + 777171
E       11  chromedriver                        0x0000000109e58ced chromedriver + 601325
E       12  chromedriver                        0x0000000109e59e51 chromedriver + 605777
E       13  chromedriver                        0x000000010a1c90ce chromedriver + 4206798
E       14  chromedriver                        0x000000010a1cd797 chromedriver + 4224919
E       15  chromedriver                        0x000000010a1d4a4f chromedriver + 4254287
E       16  chromedriver                        0x000000010a1ce4da chromedriver + 4228314
E       17  chromedriver                        0x000000010a1a723f chromedriver + 4067903
E       18  chromedriver                        0x000000010a1eb6a8 chromedriver + 4347560
E       19  chromedriver                        0x000000010a1eb816 chromedriver + 4347926
E       20  chromedriver                        0x000000010a2008fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61020/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:27] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:27] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:28] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:28] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:29] "GET /api/v1/posts/ HTTP/1.1" 200 -
_____________________________ test_infinite_scroll _____________________________

live_server = <conftest.LiveServer object at 0x10587eec0>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="7b7597f1ad4536a811b397f555ed1cd1")>

    def test_infinite_scroll(live_server, driver):
        """Test infinite scroll.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        # Delete all likes, comments and posts.  The default database contains
        # postids {1,2,3,4}.  We're going to delete those and add new posts later
        # in this test.  The new posts will start with postid=5.
        connection = sqlite3.connect("var/insta485.sqlite3")
        connection.execute("PRAGMA foreign_keys = ON")
        connection.execute("DELETE FROM likes")
        connection.execute("DELETE FROM comments")
        connection.execute("DELETE FROM posts")
        connection.commit()
        connection.close()
    
        # Create exactly 11 posts with "fox.jpg".  We're making requests directly
        # to the server-side dynamic pages server here, not using Selenium.
        session = requests.Session()
        response = session.get(live_server.url())
        assert response.status_code == 200
    
        accounts_url = urljoin(live_server.url(), "/accounts/")
        response = session.post(
            accounts_url,
            data={
                "operation": "login",
                "username": "awdeorio",
                "password": "password"
            }
        )
        assert response.status_code == 200
        pic_path = utils.TEST_DIR/"testdata/fox.jpg"
        post_url = urljoin(live_server.url(), "/posts/")
        for _ in range(11):
            with pic_path.open("rb") as pic:
                response = session.post(
                    post_url,
                    files={"file": pic},
                    data={
                        "create_post": "upload new post",
                        "operation": "create"
                    }
                )
            assert response.status_code == 200
    
        # Log in by reusing test from test_index
>       test_index.test_login(live_server, driver)

tests/test_scroll.py:65: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10587c370>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x000000010a28c598 chromedriver + 4404632
E       1   chromedriver                        0x000000010a213fa3 chromedriver + 3911587
E       2   chromedriver                        0x0000000109ec0e6a chromedriver + 425578
E       3   chromedriver                        0x0000000109ef8c91 chromedriver + 654481
E       4   chromedriver                        0x0000000109ef8e91 chromedriver + 654993
E       5   chromedriver                        0x0000000109eed527 chromedriver + 607527
E       6   chromedriver                        0x0000000109f16dcd chromedriver + 777677
E       7   chromedriver                        0x0000000109eed465 chromedriver + 607333
E       8   chromedriver                        0x0000000109f16efe chromedriver + 777982
E       9   chromedriver                        0x0000000109f2df79 chromedriver + 872313
E       10  chromedriver                        0x0000000109f16bd3 chromedriver + 777171
E       11  chromedriver                        0x0000000109eebced chromedriver + 601325
E       12  chromedriver                        0x0000000109eece51 chromedriver + 605777
E       13  chromedriver                        0x000000010a25c0ce chromedriver + 4206798
E       14  chromedriver                        0x000000010a260797 chromedriver + 4224919
E       15  chromedriver                        0x000000010a267a4f chromedriver + 4254287
E       16  chromedriver                        0x000000010a2614da chromedriver + 4228314
E       17  chromedriver                        0x000000010a23a23f chromedriver + 4067903
E       18  chromedriver                        0x000000010a27e6a8 chromedriver + 4347560
E       19  chromedriver                        0x000000010a27e816 chromedriver + 4347926
E       20  chromedriver                        0x000000010a2938fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61064/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:42] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:42] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:43] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:44] "GET /api/v1/posts/ HTTP/1.1" 200 -
__________________________ test_infinite_scroll_many ___________________________

live_server = <conftest.LiveServer object at 0x105749a20>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="3ccca6700d7763a10009456597a19ed1")>

    def test_infinite_scroll_many(live_server, driver):
        """Test many infinite scrolls.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        # Delete all likes, comments and posts.  The default database contains
        # postids {1,2,3,4}.  We're going to delete those and add new posts later
        # in this test.  The new posts will start with postid=5.
        connection = sqlite3.connect("var/insta485.sqlite3")
        connection.execute("PRAGMA foreign_keys = ON")
        connection.execute("DELETE FROM likes")
        connection.execute("DELETE FROM comments")
        connection.execute("DELETE FROM posts")
        connection.commit()
        connection.close()
    
        # Create exactly 30 posts with "fox.jpg".  We're making requests directly
        # to the server-side dynamic pages server here, not using Selenium.
        session = requests.Session()
        response = session.get(live_server.url())
        assert response.status_code == 200
    
        accounts_url = urljoin(live_server.url(), "/accounts/")
        response = session.post(
            accounts_url,
            data={
                "operation": "login",
                "username": "awdeorio",
                "password": "password"
            }
        )
        assert response.status_code == 200
        pic_path = utils.TEST_DIR/"testdata/fox.jpg"
        post_url = urljoin(live_server.url(), "/posts/")
        for _ in range(30):
            with pic_path.open("rb") as pic:
                response = session.post(
                    post_url,
                    files={"file": pic},
                    data={
                        "create_post": "upload new post",
                        "operation": "create"
                    }
                )
            assert response.status_code == 200
    
        # Log in by reusing test from test_index
>       test_index.test_login(live_server, driver)

tests/test_scroll.py:138: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x105749420>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x0000000100d81598 chromedriver + 4404632
E       1   chromedriver                        0x0000000100d08fa3 chromedriver + 3911587
E       2   chromedriver                        0x00000001009b5e6a chromedriver + 425578
E       3   chromedriver                        0x00000001009edc91 chromedriver + 654481
E       4   chromedriver                        0x00000001009ede91 chromedriver + 654993
E       5   chromedriver                        0x00000001009e2527 chromedriver + 607527
E       6   chromedriver                        0x0000000100a0bdcd chromedriver + 777677
E       7   chromedriver                        0x00000001009e2465 chromedriver + 607333
E       8   chromedriver                        0x0000000100a0befe chromedriver + 777982
E       9   chromedriver                        0x0000000100a22f79 chromedriver + 872313
E       10  chromedriver                        0x0000000100a0bbd3 chromedriver + 777171
E       11  chromedriver                        0x00000001009e0ced chromedriver + 601325
E       12  chromedriver                        0x00000001009e1e51 chromedriver + 605777
E       13  chromedriver                        0x0000000100d510ce chromedriver + 4206798
E       14  chromedriver                        0x0000000100d55797 chromedriver + 4224919
E       15  chromedriver                        0x0000000100d5ca4f chromedriver + 4254287
E       16  chromedriver                        0x0000000100d564da chromedriver + 4228314
E       17  chromedriver                        0x0000000100d2f23f chromedriver + 4067903
E       18  chromedriver                        0x0000000100d736a8 chromedriver + 4347560
E       19  chromedriver                        0x0000000100d73816 chromedriver + 4347926
E       20  chromedriver                        0x0000000100d888fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61158/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:55] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:55] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:56] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:39:57] "GET /api/v1/posts/ HTTP/1.1" 200 -
_____________________________ test_scroll_refresh ______________________________

live_server = <conftest.LiveServer object at 0x105943d30>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="e1b925c2ad4c2fb9dc360bf3ba3b1281")>

    def test_scroll_refresh(live_server, driver):
        """Test infinite scroll with refresh afterward.
    
        Go to main page, scroll to trigger infinite scroll, make a post from
        background, refresh the page, make sure only 10 posts appear including
        the previously made, new post.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        # Delete all likes, comments and posts.  The default database contains
        # postids {1,2,3,4}.  We're going to delete those and add new posts later
        # in this test.  The new posts will start with postid=5.
        connection = sqlite3.connect("var/insta485.sqlite3")
        connection.execute("PRAGMA foreign_keys = ON")
        connection.execute("DELETE FROM likes")
        connection.execute("DELETE FROM comments")
        connection.execute("DELETE FROM posts")
        connection.commit()
        connection.close()
    
        # Create exactly 11 posts with "fox.jpg".  We're making requests directly
        # to the server-side dynamic pages server here, not using Selenium.
        session = requests.Session()
        response = session.get(live_server.url())
        assert response.status_code == 200
    
        accounts_url = urljoin(live_server.url(), "/accounts/")
        response = session.post(
            accounts_url,
            data={
                "operation": "login",
                "username": "awdeorio",
                "password": "password"
            }
        )
        assert response.status_code == 200
        pic_path = utils.TEST_DIR/"testdata/fox.jpg"
        post_url = urljoin(live_server.url(), "/posts/")
        for _ in range(11):
            with pic_path.open("rb") as pic:
                response = session.post(
                    post_url,
                    files={"file": pic},
                    data={
                        "create_post": "upload new post",
                        "operation": "create"
                    }
                )
            assert response.status_code == 200
    
        # Log in by reusing test from test_index
>       test_index.test_login(live_server, driver)

tests/test_scroll.py:238: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:70: in test_login
    assert react_entry.find_element(By.XPATH, ".//*"), \
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:419: in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
env/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute
    return self._parent.execute(command, params)
env/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x105943a30>
response = {'status': 404, 'value': '{"value":{"error":"no such element","message":"no such element: Unable to locate element: {\...ff809de14e1 _pthread_start + 125\\n22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, str):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:
            exception_class = NoSuchShadowRootException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if not value:
            value = response['value']
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None  # type: ignore[assignment]
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        st_value = value.get('stackTrace') or value.get('stacktrace')
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split('\n')
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get('methodName', '<anonymous>')
                        if 'className' in frame:
                            meth = "{}.{}".format(frame['className'], meth)
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":".//*"}
E         (Session info: headless chrome=106.0.5249.119)
E       Stacktrace:
E       0   chromedriver                        0x0000000100749598 chromedriver + 4404632
E       1   chromedriver                        0x00000001006d0fa3 chromedriver + 3911587
E       2   chromedriver                        0x000000010037de6a chromedriver + 425578
E       3   chromedriver                        0x00000001003b5c91 chromedriver + 654481
E       4   chromedriver                        0x00000001003b5e91 chromedriver + 654993
E       5   chromedriver                        0x00000001003aa527 chromedriver + 607527
E       6   chromedriver                        0x00000001003d3dcd chromedriver + 777677
E       7   chromedriver                        0x00000001003aa465 chromedriver + 607333
E       8   chromedriver                        0x00000001003d3efe chromedriver + 777982
E       9   chromedriver                        0x00000001003eaf79 chromedriver + 872313
E       10  chromedriver                        0x00000001003d3bd3 chromedriver + 777171
E       11  chromedriver                        0x00000001003a8ced chromedriver + 601325
E       12  chromedriver                        0x00000001003a9e51 chromedriver + 605777
E       13  chromedriver                        0x00000001007190ce chromedriver + 4206798
E       14  chromedriver                        0x000000010071d797 chromedriver + 4224919
E       15  chromedriver                        0x0000000100724a4f chromedriver + 4254287
E       16  chromedriver                        0x000000010071e4da chromedriver + 4228314
E       17  chromedriver                        0x00000001006f723f chromedriver + 4067903
E       18  chromedriver                        0x000000010073b6a8 chromedriver + 4347560
E       19  chromedriver                        0x000000010073b816 chromedriver + 4347926
E       20  chromedriver                        0x00000001007508fe chromedriver + 4434174
E       21  libsystem_pthread.dylib             0x00007ff809de14e1 _pthread_start + 125
E       22  libsystem_pthread.dylib             0x00007ff809ddcf6b thread_start + 15

env/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchElementException
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:141 Setup test fixture 'live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61319/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:08] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:08] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /accounts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:09] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "[32mPOST /posts/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /users/awdeorio/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:10] "GET /api/v1/posts/ HTTP/1.1" 200 -
________________________________ test_feed_load ________________________________

slow_live_server = <conftest.LiveServer object at 0x1056c3c40>
slow_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="4e2e8eef56f0e3cd3285ca2e0d1a911f")>

    def test_feed_load(slow_live_server, slow_driver):
        """Run test from test_index.py with slow REST API server.
    
        'slow_live_server' is a fixture function that starts a live server.  The
        live server artificially delays the response to each API request.
    
        'slow_driver' is a fixture fuction that provides access to a headless
        Chrome web browser via the Selenium library.  The driver is configured with
        an increased timeout to account for the slow live server.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_index.test_feed_load(slow_live_server, slow_driver)

tests/test_slow_server_index.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x1056c3c40>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="4e2e8eef56f0e3cd3285ca2e0d1a911f")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements(By.TAG_NAME, "script")
        script_element = driver.find_element(By.TAG_NAME, "script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
>       assert driver.find_elements(By.XPATH, "//a[@href='/posts/1/']")
E       assert []
E        +  where [] = <bound method WebDriver.find_elements of <selenium.webdriver.chrome.webdriver.WebDriver (session="4e2e8eef56f0e3cd3285ca2e0d1a911f")>>('xpath', "//a[@href='/posts/1/']")
E        +    where <bound method WebDriver.find_elements of <selenium.webdriver.chrome.webdriver.WebDriver (session="4e2e8eef56f0e3cd3285ca2e0d1a911f")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="4e2e8eef56f0e3cd3285ca2e0d1a911f")>.find_elements
E        +    and   'xpath' = By.XPATH

tests/test_index.py:94: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61471/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:26] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:26] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:27] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:27] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:28] "GET /api/v1/posts/ HTTP/1.1" 200 -
_______________________________ test_new_comment _______________________________

slow_live_server = <conftest.LiveServer object at 0x1058f9510>
slow_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="230613160f52e195868780bd7770a4e0")>

    def test_new_comment(slow_live_server, slow_driver):
        """Run test from test_index.py with slow REST API server.
    
        'slow_live_server' is a fixture function that starts a live server.  The
        live server artificially delays the response to each API request.
    
        'slow_driver' is a fixture fuction that provides access to a headless
        Chrome web browser via the Selenium library.  The driver is configured with
        an increased timeout to account for the slow live server.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_index.test_new_comment(slow_live_server, slow_driver)

tests/test_slow_server_index.py:84: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:170: in test_new_comment
    test_feed_load(live_server, driver)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x1058f9510>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="230613160f52e195868780bd7770a4e0")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements(By.TAG_NAME, "script")
        script_element = driver.find_element(By.TAG_NAME, "script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
>       assert driver.find_elements(By.XPATH, "//a[@href='/posts/1/']")
E       assert []
E        +  where [] = <bound method WebDriver.find_elements of <selenium.webdriver.chrome.webdriver.WebDriver (session="230613160f52e195868780bd7770a4e0")>>('xpath', "//a[@href='/posts/1/']")
E        +    where <bound method WebDriver.find_elements of <selenium.webdriver.chrome.webdriver.WebDriver (session="230613160f52e195868780bd7770a4e0")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="230613160f52e195868780bd7770a4e0")>.find_elements
E        +    and   'xpath' = By.XPATH

tests/test_index.py:94: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61510/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:49] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:49] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:50] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:40:51] "GET /api/v1/posts/ HTTP/1.1" 200 -
_______________________________ test_like_unlike _______________________________

slow_live_server = <conftest.LiveServer object at 0x10546e320>
slow_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="be740105fe408f67afb0526430f60472")>

    def test_like_unlike(slow_live_server, slow_driver):
        """Run test from test_index.py with slow REST API server.
    
        'slow_live_server' is a fixture function that starts a live server.  The
        live server artificially delays the response to each API request.
    
        'slow_driver' is a fixture fuction that provides access to a headless
        Chrome web browser via the Selenium library.  The driver is configured with
        an increased timeout to account for the slow live server.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_index.test_like_unlike(slow_live_server, slow_driver)

tests/test_slow_server_index.py:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:343: in test_like_unlike
    test_feed_load(live_server, driver)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x10546e320>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="be740105fe408f67afb0526430f60472")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements(By.TAG_NAME, "script")
        script_element = driver.find_element(By.TAG_NAME, "script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
>       assert driver.find_elements(By.XPATH, "//a[@href='/posts/1/']")
E       assert []
E        +  where [] = <bound method WebDriver.find_elements of <selenium.webdriver.chrome.webdriver.WebDriver (session="be740105fe408f67afb0526430f60472")>>('xpath', "//a[@href='/posts/1/']")
E        +    where <bound method WebDriver.find_elements of <selenium.webdriver.chrome.webdriver.WebDriver (session="be740105fe408f67afb0526430f60472")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="be740105fe408f67afb0526430f60472")>.find_elements
E        +    and   'xpath' = By.XPATH

tests/test_index.py:94: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61563/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:11] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:11] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:12] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:13] "GET /api/v1/posts/ HTTP/1.1" 200 -
_________________________________ test_refresh _________________________________

slow_live_server = <conftest.LiveServer object at 0x105749c00>
slow_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="36389ddd98c7da7db13192f353e777f3")>

    def test_refresh(slow_live_server, slow_driver):
        """Run test from test_index.py with slow REST API server.
    
        'slow_live_server' is a fixture function that starts a live server.  The
        live server artificially delays the response to each API request.
    
        'slow_driver' is a fixture fuction that provides access to a headless
        Chrome web browser via the Selenium library.  The driver is configured with
        an increased timeout to account for the slow live server.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
>       test_index.test_refresh(slow_live_server, slow_driver)

tests/test_slow_server_index.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_index.py:518: in test_refresh
    test_feed_load(live_server, driver)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

live_server = <conftest.LiveServer object at 0x105749c00>
driver = <selenium.webdriver.chrome.webdriver.WebDriver (session="36389ddd98c7da7db13192f353e777f3")>

    def test_feed_load(live_server, driver):
        """Verify feed loads on index page.
    
        'live_server' is a fixture function that starts a live server.
    
        'driver' is a fixture fuction that provides access to a headless Chrome web
        browser via the Selenium library.
    
        Fixtures are implemented in conftest.py and reused by many tests.  Docs:
        https://docs.pytest.org/en/latest/fixture.html
        """
        test_login(live_server, driver)
    
        # Verify react is being used
        assert driver.find_elements(By.TAG_NAME, "script")
        script_element = driver.find_element(By.TAG_NAME, "script")
        assert "/static/js/bundle.js" in script_element.get_attribute("src")
        assert script_element.get_attribute("type") == 'text/javascript'
    
        # Verify links
>       assert driver.find_elements(By.XPATH, "//a[@href='/posts/1/']")
E       assert []
E        +  where [] = <bound method WebDriver.find_elements of <selenium.webdriver.chrome.webdriver.WebDriver (session="36389ddd98c7da7db13192f353e777f3")>>('xpath', "//a[@href='/posts/1/']")
E        +    where <bound method WebDriver.find_elements of <selenium.webdriver.chrome.webdriver.WebDriver (session="36389ddd98c7da7db13192f353e777f3")>> = <selenium.webdriver.chrome.webdriver.WebDriver (session="36389ddd98c7da7db13192f353e777f3")>.find_elements
E        +    and   'xpath' = By.XPATH

tests/test_index.py:94: AssertionError
---------------------------- Captured stdout setup -----------------------------
 * Serving Flask app 'insta485' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
---------------------------- Captured stderr setup -----------------------------
+ '[' 1 -ne 1 ']'
+ case $1 in
+ rm -rf var/insta485.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3
+ sqlite3 var/insta485.sqlite3
+ cp sql/uploads/122a7d27ca1d7420a1072f695d9290fad4501a41.jpg sql/uploads/2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg sql/uploads/505083b8b56c97429a728b68f31b0b2a089e5113.jpg sql/uploads/5ecde7677b83304132cb2871516ea50032ff7a4f.jpg sql/uploads/73ab33bd357c3fd42292487b825880958c595655.jpg sql/uploads/9887e06812ef434d291e4936417d125cd594b38a.jpg sql/uploads/ad7790405c539894d25ab8dcf0b79eed3341e109.jpg sql/uploads/e1a7c5c32973862ee15173b0259e3efdb6a391af.jpg var/uploads/
------------------------------ Captured log setup ------------------------------
INFO     autograder:conftest.py:90 Setup test fixture 'app'
INFO     autograder:conftest.py:257 Setup test fixture 'slow_live_server'
INFO     werkzeug:_internal.py:225  * Running on http://127.0.0.1:61595/ (Press CTRL+C to quit)
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:33] "[32mGET / HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:33] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     autograder:conftest.py:158 Setup test fixture 'driver'
INFO     autograder:conftest.py:201 IMPLICIT_WAIT_TIME=10
INFO     autograder:conftest.py:235 Setup test fixture 'slow_driver'
INFO     autograder:conftest.py:239 IMPLICIT_WAIT_TIME_SLOW_SERVER=20
------------------------------ Captured log call -------------------------------
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "[32mGET /accounts/login HTTP/1.1[0m" 308 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "GET /accounts/login/ HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "[32mPOST /accounts/?target=/ HTTP/1.1[0m" 302 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "GET / HTTP/1.1" 200 -
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:34] "GET /static/js/bundle.js HTTP/1.1" 200 -
INFO     autograder:conftest.py:267 Delaying response 0.5s to request "GET /api/v1/posts/"
INFO     werkzeug:_internal.py:225 127.0.0.1 - - [13/Oct/2022 19:41:35] "GET /api/v1/posts/ HTTP/1.1" 200 -
_______________________________ test_pycodestyle _______________________________

    def test_pycodestyle():
        """Run pycodestyle."""
        assert_no_prohibited_terms("nopep8", "noqa", "pylint")
>       subprocess.run(["pycodestyle", "setup.py", "insta485"], check=True)

tests/test_style.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (['pycodestyle', 'setup.py', 'insta485'],), kwargs = {}
process = <Popen: returncode: 1 args: ['pycodestyle', 'setup.py', 'insta485']>
stdout = None, stderr = None, retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['pycodestyle', 'setup.py', 'insta485']' returned non-zero exit status 1.

/usr/local/Cellar/python@3.10/3.10.7/Frameworks/Python.framework/Versions/3.10/lib/python3.10/subprocess.py:524: CalledProcessError
----------------------------- Captured stdout call -----------------------------
insta485/api/comments.py:7:1: E302 expected 2 blank lines, found 1
insta485/api/comments.py:11:1: W293 blank line contains whitespace
insta485/api/comments.py:14:1: W293 blank line contains whitespace
insta485/api/comments.py:15:32: E712 comparison to False should be 'if cond is False:' or 'if not cond:'
insta485/api/comments.py:19:1: W293 blank line contains whitespace
insta485/api/comments.py:50:38: E712 comparison to False should be 'if cond is False:' or 'if not cond:'
insta485/api/comments.py:54:41: E712 comparison to False should be 'if cond is False:' or 'if not cond:'
insta485/api/db_operations.py:3:1: E302 expected 2 blank lines, found 1
insta485/api/db_operations.py:62:1: E302 expected 2 blank lines, found 1
insta485/api/likes.py:7:1: E302 expected 2 blank lines, found 1
insta485/api/likes.py:15:32: E712 comparison to False should be 'if cond is False:' or 'if not cond:'
insta485/api/likes.py:52:30: E712 comparison to False should be 'if cond is False:' or 'if not cond:'
insta485/api/likes.py:54:35: E712 comparison to False should be 'if cond is False:' or 'if not cond:'
insta485/api/posts.py:7:1: E302 expected 2 blank lines, found 1
insta485/api/posts.py:14:80: E501 line too long (81 > 79 characters)
insta485/api/posts.py:46:74: E231 missing whitespace after ','
insta485/api/posts.py:46:80: E501 line too long (92 > 79 characters)
insta485/api/posts.py:46:81: E231 missing whitespace after ','
insta485/api/posts.py:86:80: E501 line too long (80 > 79 characters)
insta485/api/posts.py:89:80: E501 line too long (83 > 79 characters)
insta485/api/posts.py:110:58: E711 comparison to None should be 'if cond is not None:'
insta485/api/posts.py:122:80: E501 line too long (84 > 79 characters)
insta485/api/posts.py:127:5: E303 too many blank lines (2)
insta485/api/posts.py:143:41: W292 no newline at end of file
insta485/api/service.py:4:1: E302 expected 2 blank lines, found 0
insta485/api/service.py:12:36: W292 no newline at end of file
insta485/api/utils.py:5:1: E302 expected 2 blank lines, found 1
insta485/api/utils.py:9:64: W291 trailing whitespace
insta485/api/utils.py:15:56: W291 trailing whitespace
insta485/api/utils.py:17:59: W291 trailing whitespace
insta485/api/utils.py:18:59: W291 trailing whitespace
insta485/api/utils.py:21:1: W293 blank line contains whitespace
insta485/api/utils.py:44:1: E302 expected 2 blank lines, found 1
insta485/api/utils.py:55:1: E302 expected 2 blank lines, found 1
_______________________________ test_pydocstyle ________________________________

    def test_pydocstyle():
        """Run pydocstyle."""
        assert_no_prohibited_terms("nopep8", "noqa", "pylint")
>       subprocess.run(["pydocstyle", "setup.py", "insta485"], check=True)

tests/test_style.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (['pydocstyle', 'setup.py', 'insta485'],), kwargs = {}
process = <Popen: returncode: 1 args: ['pydocstyle', 'setup.py', 'insta485']>
stdout = None, stderr = None, retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['pydocstyle', 'setup.py', 'insta485']' returned non-zero exit status 1.

/usr/local/Cellar/python@3.10/3.10.7/Frameworks/Python.framework/Versions/3.10/lib/python3.10/subprocess.py:524: CalledProcessError
----------------------------- Captured stdout call -----------------------------
insta485/api/service.py:5 in public function `get_service`:
        D103: Missing docstring in public function
insta485/api/likes.py:8 in public function `create_like`:
        D103: Missing docstring in public function
insta485/api/likes.py:44 in public function `delete_like`:
        D103: Missing docstring in public function
insta485/api/posts.py:8 in public function `get_posts`:
        D103: Missing docstring in public function
insta485/api/posts.py:58 in public function `get_post`:
        D103: Missing docstring in public function
insta485/api/utils.py:1 at module level:
        D100: Missing docstring in public module
insta485/api/utils.py:5 in public function `check_authorization`:
        D103: Missing docstring in public function
insta485/api/utils.py:44 in public function `postid_in_range`:
        D103: Missing docstring in public function
insta485/api/utils.py:55 in public function `commentid_in_range`:
        D103: Missing docstring in public function
insta485/api/db_operations.py:1 at module level:
        D100: Missing docstring in public module
insta485/api/db_operations.py:4 in public function `has_liked`:
        D205: 1 blank line required between summary line and description (found 0)
insta485/api/db_operations.py:4 in public function `has_liked`:
        D400: First line should end with a period (not 'd')
insta485/api/db_operations.py:32 in public function `likeid_exists`:
        D205: 1 blank line required between summary line and description (found 0)
insta485/api/db_operations.py:32 in public function `likeid_exists`:
        D400: First line should end with a period (not 's')
insta485/api/db_operations.py:47 in public function `own_like`:
        D205: 1 blank line required between summary line and description (found 0)
insta485/api/db_operations.py:47 in public function `own_like`:
        D400: First line should end with a period (not 'e')
insta485/api/db_operations.py:63 in public function `own_comment`:
        D205: 1 blank line required between summary line and description (found 0)
insta485/api/db_operations.py:63 in public function `own_comment`:
        D400: First line should end with a period (not 'e')
insta485/api/comments.py:8 in public function `add_comment`:
        D103: Missing docstring in public function
insta485/api/comments.py:45 in public function `delete_comment`:
        D103: Missing docstring in public function
_________________________________ test_pylint __________________________________

    def test_pylint():
        """Run pylint."""
        assert_no_prohibited_terms("nopep8", "noqa", "pylint")
>       subprocess.run([
            "pylint",
            "--rcfile", utils.TEST_DIR/"testdata/pylintrc",
            "--disable=cyclic-import",
            "--unsafe-load-any-extension=y",
            "setup.py",
            "insta485",
        ], check=True)

tests/test_style.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (['pylint', '--rcfile', PosixPath('/Users/cjy/eecs485/EECS485-p3/tests/testdata/pylintrc'), '--disable=cyclic-import', '--unsafe-load-any-extension=y', 'setup.py', ...],)
kwargs = {}
process = <Popen: returncode: 28 args: ['pylint', '--rcfile', PosixPath('/Users/cjy/ee...>
stdout = None, stderr = None, retcode = 28

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['pylint', '--rcfile', PosixPath('/Users/cjy/eecs485/EECS485-p3/tests/testdata/pylintrc'), '--disable=cyclic-import', '--unsafe-load-any-extension=y', 'setup.py', 'insta485']' returned non-zero exit status 28.

/usr/local/Cellar/python@3.10/3.10.7/Frameworks/Python.framework/Versions/3.10/lib/python3.10/subprocess.py:524: CalledProcessError
----------------------------- Captured stdout call -----------------------------
************* Module insta485.api.service
insta485/api/service.py:12:0: C0304: Final newline missing (missing-final-newline)
insta485/api/service.py:5:0: C0116: Missing function or method docstring (missing-function-docstring)
************* Module insta485.api.likes
insta485/api/likes.py:4:0: W0401: Wildcard import insta485.api.utils (wildcard-import)
insta485/api/likes.py:5:0: W0401: Wildcard import insta485.api.db_operations (wildcard-import)
insta485/api/likes.py:8:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/likes.py:15:7: C0121: Comparison 'postid_in_range(postid) == False' should be 'postid_in_range(postid) is False' if checking for the singleton value False, or 'not postid_in_range(postid)' if testing for falsiness (singleton-comparison)
insta485/api/likes.py:20:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
insta485/api/likes.py:24:19: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/likes.py:38:19: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/likes.py:44:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/likes.py:52:7: C0121: Comparison 'likeid_exists(likeid) == False' should be 'likeid_exists(likeid) is False' if checking for the singleton value False, or 'not likeid_exists(likeid)' if testing for falsiness (singleton-comparison)
insta485/api/likes.py:54:7: C0121: Comparison 'own_like(username, likeid) == False' should be 'own_like(username, likeid) is False' if checking for the singleton value False, or 'not own_like(username, likeid)' if testing for falsiness (singleton-comparison)
insta485/api/likes.py:4:0: W0614: Unused import(s) hashlib and commentid_in_range from wildcard import of insta485.api.utils (unused-wildcard-import)
insta485/api/likes.py:5:0: W0614: Unused import(s) own_comment from wildcard import of insta485.api.db_operations (unused-wildcard-import)
************* Module insta485.api.posts
insta485/api/posts.py:143:0: C0304: Final newline missing (missing-final-newline)
insta485/api/posts.py:8:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/posts.py:8:0: R0914: Too many local variables (16/15) (too-many-locals)
insta485/api/posts.py:44:8: W0622: Redefining built-in 'next' (redefined-builtin)
insta485/api/posts.py:42:24: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:46:15: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:58:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/posts.py:84:34: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:86:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:89:30: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:100:24: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:110:44: C0121: Comparison 'logname_like != None' should be 'logname_like is not None' (singleton-comparison)
insta485/api/posts.py:122:34: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:137:29: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:138:30: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:139:29: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/posts.py:141:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
************* Module insta485.api.utils
insta485/api/utils.py:9:63: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/utils.py:15:55: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/utils.py:17:58: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/utils.py:18:58: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/utils.py:21:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/utils.py:1:0: C0114: Missing module docstring (missing-module-docstring)
insta485/api/utils.py:5:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/utils.py:44:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/utils.py:55:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/utils.py:3:0: C0411: standard import "import hashlib" should be placed before "import flask" (wrong-import-order)
************* Module insta485.api.db_operations
insta485/api/db_operations.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module insta485.api.comments
insta485/api/comments.py:11:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/comments.py:14:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/comments.py:19:0: C0303: Trailing whitespace (trailing-whitespace)
insta485/api/comments.py:5:0: W0401: Wildcard import insta485.api.utils (wildcard-import)
insta485/api/comments.py:8:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/comments.py:15:7: C0121: Comparison 'postid_in_range(postid) == False' should be 'postid_in_range(postid) is False' if checking for the singleton value False, or 'not postid_in_range(postid)' if testing for falsiness (singleton-comparison)
insta485/api/comments.py:37:24: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/comments.py:39:15: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
insta485/api/comments.py:45:0: C0116: Missing function or method docstring (missing-function-docstring)
insta485/api/comments.py:50:7: C0121: Comparison 'commentid_in_range(commentid) == False' should be 'commentid_in_range(commentid) is False' if checking for the singleton value False, or 'not commentid_in_range(commentid)' if testing for falsiness (singleton-comparison)
insta485/api/comments.py:54:7: C0121: Comparison 'own_comment(username, commentid) == False' should be 'own_comment(username, commentid) is False' if checking for the singleton value False, or 'not own_comment(username, commentid)' if testing for falsiness (singleton-comparison)
insta485/api/comments.py:5:0: W0614: Unused import(s) hashlib from wildcard import of insta485.api.utils (unused-wildcard-import)
************* Module insta485.views.explore
insta485/views/explore.py:1:0: R0801: Similar lines in 2 files
==insta485.api.db_operations:[7:37]
==insta485.views.target_operation:[34:61]
    connection = insta485.model.get_db()
    cur = connection.execute(
        "SELECT * "
        "FROM likes "
        "WHERE owner = ? AND postid = ?",
        (username, postid)
    )
    return len(cur.fetchall()) != 0


def get_likeid(username, postid):
    """Get likeid."""
    connection = insta485.model.get_db()
    cur = connection.execute(
        "SELECT likeid "
        "FROM likes "
        "WHERE owner = ? AND postid = ?",
        (username, postid, )
    )
    results = cur.fetchone()
    return results["likeid"]


def find_comment_owner(commentid):
    """Find comment owner."""
    connection = insta485.model.get_db()
    cur = connection.execute( (duplicate-code)
insta485/views/explore.py:1:0: R0801: Similar lines in 2 files
==insta485.api.comments:[9:19]
==insta485.api.likes:[10:19]
    username, has_error, error_code = check_authorization()

    if has_error:
        return flask.jsonify({}), error_code

    if postid_in_range(postid) == False:
        # if postid is not in range
        # return 404
        return flask.jsonify({}), 404
 (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 9.28/10 (previous run: 9.28/10, +0.00)

________________________________ test_prettier _________________________________

    def test_prettier():
        """Run Prettier."""
        assert_no_prohibited_terms("prettier-disable")
>       subprocess.run([
            "npx", "prettier",
            "--check",
            "insta485/js",
        ], check=True)

tests/test_style.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = False, timeout = None, check = True
popenargs = (['npx', 'prettier', '--check', 'insta485/js'],), kwargs = {}
process = <Popen: returncode: 1 args: ['npx', 'prettier', '--check', 'insta485/js']>
stdout = None, stderr = None, retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['npx', 'prettier', '--check', 'insta485/js']' returned non-zero exit status 1.

/usr/local/Cellar/python@3.10/3.10.7/Frameworks/Python.framework/Versions/3.10/lib/python3.10/subprocess.py:524: CalledProcessError
----------------------------- Captured stdout call -----------------------------
Checking formatting...
----------------------------- Captured stderr call -----------------------------
[warn] insta485/js/comment.jsx
[warn] insta485/js/like.jsx
[warn] insta485/js/post.jsx
[warn] insta485/js/posts.jsx
[warn] Code style issues found in 4 files. Forgot to run Prettier?
=============================== warnings summary ===============================
test_selenium_hello.py::test_selenium_hello
  /Users/cjy/eecs485/EECS485-p3/test_selenium_hello.py:31: DeprecationWarning: executable_path has been deprecated, please pass in a Service object
    driver = selenium.webdriver.Chrome(

tests/test_index.py: 10 warnings
tests/test_scroll.py: 3 warnings
tests/test_slow_server_index.py: 6 warnings
  /Users/cjy/eecs485/EECS485-p3/tests/conftest.py:188: DeprecationWarning: executable_path has been deprecated, please pass in a Service object
    driver = selenium.webdriver.Chrome(

tests/test_index.py: 10 warnings
tests/test_scroll.py: 3 warnings
tests/test_slow_server_index.py: 6 warnings
  /Users/cjy/eecs485/EECS485-p3/env/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:69: DeprecationWarning: desired_capabilities has been deprecated, please pass in a Service object
    super().__init__(DesiredCapabilities.CHROME['browserName'], "goog",

tests/test_index.py: 10 warnings
tests/test_scroll.py: 3 warnings
tests/test_slow_server_index.py: 6 warnings
  /Users/cjy/eecs485/EECS485-p3/tests/conftest.py:339: UserWarning: The 'environ['werkzeug.server.shutdown']' function is deprecated and will be removed in Werkzeug 2.1.
    shutdown_func()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_index.py::test_login - selenium.common.exceptions.NoSuchEle...
FAILED tests/test_index.py::test_feed_load - selenium.common.exceptions.NoSuc...
FAILED tests/test_index.py::test_new_comment - selenium.common.exceptions.NoS...
FAILED tests/test_index.py::test_delete_comment - selenium.common.exceptions....
FAILED tests/test_index.py::test_new_comment_delete - selenium.common.excepti...
FAILED tests/test_index.py::test_like_unlike - selenium.common.exceptions.NoS...
FAILED tests/test_index.py::test_double_click_like - selenium.common.exceptio...
FAILED tests/test_index.py::test_refresh - selenium.common.exceptions.NoSuchE...
FAILED tests/test_index.py::test_html - selenium.common.exceptions.NoSuchElem...
FAILED tests/test_scroll.py::test_infinite_scroll - selenium.common.exception...
FAILED tests/test_scroll.py::test_infinite_scroll_many - selenium.common.exce...
FAILED tests/test_scroll.py::test_scroll_refresh - selenium.common.exceptions...
FAILED tests/test_slow_server_index.py::test_feed_load - assert []
FAILED tests/test_slow_server_index.py::test_new_comment - assert []
FAILED tests/test_slow_server_index.py::test_like_unlike - assert []
FAILED tests/test_slow_server_index.py::test_refresh - assert []
FAILED tests/test_style.py::test_pycodestyle - subprocess.CalledProcessError:...
FAILED tests/test_style.py::test_pydocstyle - subprocess.CalledProcessError: ...
FAILED tests/test_style.py::test_pylint - subprocess.CalledProcessError: Comm...
FAILED tests/test_style.py::test_prettier - subprocess.CalledProcessError: Co...
ERROR tests/test_index.py::test_login - AssertionError: Errors in browser con...
ERROR tests/test_index.py::test_feed_load - AssertionError: Errors in browser...
ERROR tests/test_index.py::test_new_comment - AssertionError: Errors in brows...
ERROR tests/test_index.py::test_delete_comment - AssertionError: Errors in br...
ERROR tests/test_index.py::test_new_comment_delete - AssertionError: Errors i...
ERROR tests/test_index.py::test_like_unlike - AssertionError: Errors in brows...
ERROR tests/test_index.py::test_double_click_like - AssertionError: Errors in...
ERROR tests/test_index.py::test_refresh - AssertionError: Errors in browser c...
ERROR tests/test_index.py::test_html - AssertionError: Errors in browser cons...
ERROR tests/test_scroll.py::test_infinite_scroll - AssertionError: Errors in ...
ERROR tests/test_scroll.py::test_infinite_scroll_many - AssertionError: Error...
ERROR tests/test_scroll.py::test_scroll_refresh - AssertionError: Errors in b...
ERROR tests/test_slow_server_index.py::test_feed_load - AssertionError: Error...
ERROR tests/test_slow_server_index.py::test_new_comment - AssertionError: Err...
ERROR tests/test_slow_server_index.py::test_like_unlike - AssertionError: Err...
ERROR tests/test_slow_server_index.py::test_refresh - AssertionError: Errors ...
====== 20 failed, 23 passed, 58 warnings, 16 errors in 264.77s (0:04:24) =======
